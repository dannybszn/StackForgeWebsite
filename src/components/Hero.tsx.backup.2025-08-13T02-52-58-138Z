import React, { useRef, useEffect, useState } from 'react'
import { Code2, Sparkles, Eye, Rocket, ChevronRight } from 'lucide-react'

const ANIMATION_STEPS = [
  {
    label: 'Generate',
    icon: <Sparkles className="w-5 h-5 text-purple-400" aria-hidden="true" />,
    color: 'text-purple-400',
  },
  {
    label: 'Preview',
    icon: <Eye className="w-5 h-5 text-blue-400" aria-hidden="true" />,
    color: 'text-blue-400',
  },
  {
    label: 'Deploy',
    icon: <Rocket className="w-5 h-5 text-green-400" aria-hidden="true" />,
    color: 'text-green-400',
  },
]

function useCycleAnimation(length: number, interval: number) {
  const [index, setIndex] = useState(0)
  useEffect(() => {
    const id = setInterval(() => setIndex(i => (i + 1) % length), interval)
    return () => clearInterval(id)
  }, [length, interval])
  return index
}

const Hero: React.FC = () => {
  const sectionRef = useRef<HTMLDivElement>(null)
  const [visible, setVisible] = useState(false)
  const animIndex = useCycleAnimation(ANIMATION_STEPS.length, 2000)

  useEffect(() => {
    const handle = () => {
      if (sectionRef.current) {
        const rect = sectionRef.current.getBoundingClientRect()
        if (rect.top < window.innerHeight - 100) setVisible(true)
      }
    }
    handle()
    window.addEventListener('scroll', handle)
    return () => window.removeEventListener('scroll', handle)
  }, [])

  return (
    <section
      aria-label="Hero"
      className="relative min-h-[80vh] w-full bg-[#0E0F13] overflow-hidden flex items-center"
    >
      <div className="absolute inset-0 pointer-events-none z-0">
        <div className="absolute -top-32 -left-32 w-[480px] h-[480px] bg-gradient-to-br from-purple-700/30 via-purple-400/10 to-transparent rounded-full blur-3xl" />
        <div className="absolute bottom-0 right-0 w-[320px] h-[320px] bg-gradient-to-tr from-purple-900/30 via-blue-800/10 to-transparent rounded-full blur-2xl" />
      </div>
      <div
        ref={sectionRef}
        className={`relative z-10 container mx-auto px-4 sm:px-6 lg:px-8 grid grid-cols-1 lg:grid-cols-12 gap-8 md:gap-16 lg:gap-24 items-center transition-opacity transition-transform duration-200 ease-out ${
          visible
            ? 'opacity-100 translate-y-0'
            : 'opacity-0 translate-y-8 pointer-events-none'
        }`}
      >
        {/* Left: Headline & Subtext */}
        <div className="lg:col-span-6 flex flex-col justify-center items-start gap-8">
          <h1
            className="text-4xl md:text-5xl lg:text-6xl font-extrabold tracking-tight text-[#F8FAFC] leading-tight focus:outline-none focus-visible:ring-4 focus-visible:ring-purple-500 rounded-lg"
            tabIndex={0}
          >
            Build AI-powered apps,<br className="hidden md:block" />
            from <span className="text-[#6D28D9]">NoCode</span> to <span className="text-[#6D28D9]">Code</span>
          </h1>
          <p className="text-lg md:text-xl text-[#CBD5E1] max-w-xl font-medium">
            Instantly create, preview, and deploy AI applications.<br />
            Go from <span className="font-semibold text-[#F8FAFC]">NoCode</span> to <span className="font-semibold text-[#F8FAFC]">Code</span> in seconds.<br />
            <span className="text-[#6D28D9] font-semibold">1-click deploy</span>, <span className="font-semibold">BYO API keys</span>, and <span className="font-semibold">flat fee</span>—no surprises.
          </p>
          <div className="flex flex-wrap gap-4 mt-2">
            <a
              href="#get-started"
              className="group inline-flex items-center px-7 py-3 rounded-xl bg-gradient-to-r from-[#6D28D9] to-purple-500 text-white font-semibold text-lg shadow-lg shadow-purple-900/20 border border-[#242A38] focus:outline-none focus-visible:ring-4 focus-visible:ring-purple-500 transition-all duration-120 ease-out hover:scale-[1.03] hover:shadow-xl"
            >
              Get Started
              <ChevronRight className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform duration-120" />
            </a>
            <a
              href="#learn-more"
              className="inline-flex items-center px-7 py-3 rounded-xl border border-[#242A38] bg-[#191C26] text-[#F8FAFC] font-semibold text-lg transition-all duration-120 ease-out hover:bg-[#242A38] hover:text-purple-300 focus:outline-none focus-visible:ring-4 focus-visible:ring-purple-500"
            >
              Learn More
            </a>
          </div>
        </div>
        {/* Right: Glassy Card with Editor Mockup & Animation */}
        <div className="lg:col-span-6 flex justify-center items-center">
          <div
            className="relative w-full max-w-xl rounded-2xl md:rounded-3xl bg-gradient-to-br from-[#13151D]/90 to-[#191C26]/95 border border-[#242A38] shadow-2xl shadow-purple-900/20 backdrop-blur-xl p-0.5 transition-all duration-120 ease-out group hover:shadow-purple-700/40 focus-within:shadow-purple-700/40"
            tabIndex={0}
            aria-label="AI Code Editor Mockup"
          >
            <div className="absolute -inset-1 rounded-2xl md:rounded-3xl pointer-events-none transition-all duration-120 ease-out group-hover:shadow-[0_0_32px_4px_rgba(109,40,217,0.25)]" />
            {/* Editor Header */}
            <div className="flex items-center justify-between px-6 py-4 border-b border-[#242A38] bg-[#191C26]/80 rounded-t-2xl md:rounded-t-3xl">
              <div className="flex items-center gap-2">
                <span className="w-3 h-3 rounded-full bg-red-500/80" />
                <span className="w-3 h-3 rounded-full bg-yellow-400/80" />
                <span className="w-3 h-3 rounded-full bg-green-500/80" />
              </div>
              <span className="flex items-center gap-2 text-[#CBD5E1] font-mono text-sm">
                <Code2 className="w-4 h-4 text-purple-400" aria-hidden="true" />
                builder.tsx
              </span>
              <span className="text-xs text-[#242A38]">AI</span>
            </div>
            {/* Editor Body */}
            <div className="relative px-6 py-8 bg-[#13151D]/90 rounded-b-2xl md:rounded-b-3xl min-h-[220px] md:min-h-[260px] flex flex-col justify-between">
              {/* Mock code lines */}
              <div className="space-y-2 font-mono text-[15px] leading-snug select-none">
                <div className="flex items-center">
                  <span className="text-[#6D28D9]">const</span>
                  <span className="mx-2 text-[#F8FAFC]">app</span>
                  <span className="text-[#CBD5E1]">=</span>
                  <span className="mx-2 text-[#F8FAFC]">createAIApp</span>
                  <span className="text-[#CBD5E1]">(</span>
                  <span className="text-[#16A34A]">'NoCode → Code'</span>
                  <span className="text-[#CBD5E1]">)</span>
                </div>
                <div>
                  <span className="text-[#6D28D9]">app.</span>
                  <span className="text-[#F8FAFC]">addFeature</span>
                  <span className="text-[#CBD5E1]">(</span>
                  <span className="text-[#F8FAFC]">'1-click deploy'</span>
                  <span className="text-[#CBD5E1]">)</span>
                </div>
                <div>
                  <span className="text-[#6D28D9]">app.</span>
                  <span className="text-[#F8FAFC]">setAPIKey</span>
                  <span className="text-[#CBD5E1]">(</span>
                  <span className="text-[#F8FAFC]">'your-key-here'</span>
                  <span className="text-[#CBD5E1]">)</span>
                </div>
                <div>
                  <span className="text-[#6D28D9]">app.</span>
                  <span className="text-[#F8FAFC]">deploy</span>
                  <span className="text-[#CBD5E1]">()</span>
                </div>
              </div>
              {/* Animated Stepper */}
              <div className="absolute right-6 bottom-8 flex flex-col items-end gap-2 z-10">
                {ANIMATION_STEPS.map((step, i) => (
                  <div
                    key={step.label}
                    className={`flex items-center gap-2 px-3 py-1.5 rounded-lg bg-[#191C26]/80 border border-[#242A38] shadow-md font-semibold text-sm min-w-[110px] transition-all duration-200 ease-out
                      ${
                        animIndex === i
                          ? `${step.color} bg-[#6D28D9]/10 border-[#6D28D9] scale-105 shadow-purple-700/30`
                          : 'text-[#CBD5E1] opacity-60'
                      }
                    `}
                    aria-live={animIndex === i ? 'polite' : undefined}
                  >
                    <span
                      className={`transition-opacity duration-200 ${
                        animIndex === i ? 'opacity-100' : 'opacity-60'
                      }`}
                    >
                      {step.icon}
                    </span>
                    <span>{step.label}</span>
                  </div>
                ))}
              </div>
              {/* Glass reflection */}
              <div className="absolute inset-0 rounded-2xl md:rounded-3xl pointer-events-none overflow-hidden">
                <div className="absolute left-0 top-0 w-2/3 h-1/4 bg-gradient-to-br from-white/15 via-transparent to-transparent blur-lg" />
                <div className="absolute right-0 bottom-0 w-1/2 h-1/4 bg-gradient-to-tr from-white/10 via-transparent to-transparent blur-md" />
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

export default Hero